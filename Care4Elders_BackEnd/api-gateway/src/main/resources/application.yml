spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      httpserver:
        websocket:
          max-frame-payload-length: 65536
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
        - DedupeResponseHeader=Access-Control-Allow-Credentials, RETAIN_FIRST
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:4200"
              - "http://localhost:4300"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      routes:
        - id: delivery-service
          uri: lb://delivery-service
          predicates:
            - Path=/api/delivery/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payment/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: billing-service
          uri: lb://billing-service
          predicates:
            - Path=/factures/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: appointment-service
          uri: lb://appointment-service
          predicates:
            - Path=/appointment/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: user-service-utilisateur
          uri: lb://user-service
          predicates:
            - Path=/api/utilisateur/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
            - DedupeResponseHeader=Access-Control-Allow-Credentials, RETAIN_FIRST
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: user-service-auth
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
            - DedupeResponseHeader=Access-Control-Allow-Credentials, RETAIN_FIRST
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: user-service-email
          uri: lb://user-service
          predicates:
            - Path=/api/Email/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
            - DedupeResponseHeader=Access-Control-Allow-Credentials, RETAIN_FIRST
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/produits/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: care-service
          uri: lb://care-service
          predicates:
            - Path=/api/care/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

        - id: telemed-service
          uri: lb://telemed-service
          predicates:
            - Path=/teleconsultations/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

server:
  port: 8080

eureka:
  client:
    service-url:
      defaultZone: http://registry-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true

management:
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
    reactor.netty.http.server: DEBUG